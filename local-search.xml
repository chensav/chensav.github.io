<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>使用Pyinstaller打包EXE</title>
    <link href="/p/aa90cabc/"/>
    <url>/p/aa90cabc/</url>
    
    <content type="html"><![CDATA[<h4 id="安装-pyinstaller-库"><a href="#安装-pyinstaller-库" class="headerlink" title="安装 pyinstaller 库"></a>安装 pyinstaller 库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install pyinstaller<br></code></pre></td></tr></table></figure><h4 id="使用-pyinstaller-打包"><a href="#使用-pyinstaller-打包" class="headerlink" title="使用 pyinstaller 打包"></a>使用 pyinstaller 打包</h4><h5 id="选项参数"><a href="#选项参数" class="headerlink" title="选项参数"></a>选项参数</h5><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>选项</td><td>描述</td></tr><tr><td>-h，–help</td><td>显示帮助信息</td></tr><tr><td>-v，–version</td><td>显示版本号</td></tr><tr><td>–distpath DIR</td><td>指定打包后的程序存放目录，默认存放在当前目录下的dist目录</td></tr><tr><td>–workpath WORKPATH</td><td>为输出的所有临时文件指定存放目录</td></tr><tr><td>–clean</td><td>在构建之前，请清理PyInstaller缓存并删除临时文件</td></tr><tr><td>-D，–onedir</td><td>生成结果是一个包含exe程序的目录，所有第三方依赖库和其他资源和exe程序位于同一目录下</td></tr><tr><td>-F，–onefile</td><td>生成结果是一个exe程序，所有第三方依赖库和其他资源都被打包进该exe程序中—</td></tr><tr><td>–key</td><td>对打包进行加密处理</td></tr></tbody></table><h4 id="反编译Pyinstaller打包的exe"><a href="#反编译Pyinstaller打包的exe" class="headerlink" title="反编译Pyinstaller打包的exe"></a>反编译Pyinstaller打包的exe</h4><p>这样的exe已经可以被迁移到别的电脑上使用了，如果是为了方便其他电脑使用，到这一步就已经结束了。但有时候，我们可能是把这个功能给很多人用，但如果不想开源或者被别人破解，到这一步是还不够的。因为到这一步的exe是可以被别人反编译出源码的</p><h5 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h5><p>exe反编译工具：<a href="https://nchc.dl.sourceforge.net/project/pyinstallerextractor/dist/pyinstxtractor.py">pyinstxtractor.py</a></p><p>pyc反编译工具：Easy Python Decompiler 或者在线反编译pyc。</p><p>将pyinstxtractor.py放到exe文件相同目录，执行以下cmd命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">python pyinstxtractor.py main.exe<br></code></pre></td></tr></table></figure><h5 id="将脚本编译为pyd以防止反编译"><a href="#将脚本编译为pyd以防止反编译" class="headerlink" title="将脚本编译为pyd以防止反编译"></a>将脚本编译为pyd以防止反编译</h5><p>如何解决呢，可以考虑将模块py文件编译为动态链接库，这样破解难度将大大增加。其中，在python里，pyd格式即动态链接库。使用cython即可编译，如果是anaconda是自带，python有的可能不带cython，安装即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">pip install Cython<br></code></pre></td></tr></table></figure><p>我们在main.py所在的文件夹新建py文件，在此处我命名为build_pyd.py，其内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs Bash">from distutils.core import setup<br>from Cython.Build import cythonize<br> <br>setup(<br> name = <span class="hljs-string">&#x27;any words.....&#x27;</span>,<br> ext_modules = cythonize([<span class="hljs-string">&quot;mylib.py&quot;</span>,]<br> ),<br>)<br></code></pre></td></tr></table></figure><p>然后执行以下cmd命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">python build_pyd.py build_ext --inplace --compiler=msvc<br></code></pre></td></tr></table></figure><p><img src="https://secure2.wostatic.cn/static/gpJ7WDs1PzZPVYgLW4afh6/1.png?auth_key=1666849858-w5TSXGW7NH7pFjvMVgjDsD-0-f9ef744989c530f45774ba22b25028cb"></p><p>此时就会多出一个pyd后缀文件，修改文件名，然后我们删除build、disk文件夹，重复步骤二，再次编译为exe即可。</p><h4 id="错误问题"><a href="#错误问题" class="headerlink" title="错误问题"></a>错误问题</h4><h5 id="执行出现-unable-to-find-vcvarsall-bat"><a href="#执行出现-unable-to-find-vcvarsall-bat" class="headerlink" title="执行出现 unable to find vcvarsall.bat"></a>执行出现 unable to find vcvarsall.bat</h5><blockquote><p>安装Visual C++ Build Tools 2015/2017 即可 <a href="http://go.microsoft.com/fwlink/?LinkId=691126">下载地址</a></p></blockquote><h5 id="打包出现问题"><a href="#打包出现问题" class="headerlink" title="打包出现问题"></a>打包出现问题</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-comment">#升级pip</span><br>python -m pip install --upgrade pip<br><br><span class="hljs-comment"># 重新安装</span><br>pip install pyinstaller<br><br></code></pre></td></tr></table></figure><h5 id="参考地址"><a href="#参考地址" class="headerlink" title="参考地址"></a>参考地址</h5><p><a href="https://www.jb51.net/article/184725.htm">https://www.jb51.net/article/184725.htm</a></p><p><a href="https://blog.csdn.net/u013451076/article/details/105815788">https://blog.csdn.net/u013451076/article/details/105815788</a></p><p><a href="https://www.jb51.net/article/184725.htm">https://www.jb51.net/article/184725.htm</a></p>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具</tag>
      
      <tag>python安装</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Laravel项目创建</title>
    <link href="/p/6297bd55/"/>
    <url>/p/6297bd55/</url>
    
    <content type="html"><![CDATA[<h3 id="安装laravel"><a href="#安装laravel" class="headerlink" title="安装laravel"></a>安装laravel</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Bash">composer create-project laravel/laravel Laravel --prefer-dist <span class="hljs-string">&quot;8.5.*&quot;</span><br><br></code></pre></td></tr></table></figure><h3 id="安装-Dcat-Admin-后台"><a href="#安装-Dcat-Admin-后台" class="headerlink" title="安装 Dcat Admin 后台"></a>安装 Dcat Admin 后台</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs Bash">composer require dcat/laravel-admin:<span class="hljs-string">&quot;2.*&quot;</span> -vvv<br><br>php artisan admin:publish<br><br>php artisan admin:install<br><br></code></pre></td></tr></table></figure><h3 id="安装辅助工具"><a href="#安装辅助工具" class="headerlink" title="安装辅助工具"></a>安装辅助工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs Bash">composer require barryvdh/laravel-ide-helper --dev<br><br><span class="hljs-comment"># 如果只想在开发环境安装请加上 --dev</span><br>composer require <span class="hljs-string">&quot;doctrine/dbal: ~2.3&quot;</span> --dev<br><br><span class="hljs-comment"># 导出配置文件</span><br>php artisan vendor:publish --provider=<span class="hljs-string">&quot;Barryvdh\LaravelIdeHelper\IdeHelperServiceProvider&quot;</span> --tag=config<br><br><span class="hljs-comment"># 为 Facades 生成注释</span><br>php artisan ide-helper:generate <br><br><span class="hljs-comment"># 为数据模型生成注释</span><br>php artisan ide-helper:models<br><br><span class="hljs-comment"># 生成 PhpStorm Meta file</span><br>php artisan ide-helper:meta<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>PHP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Laravel</tag>
      
      <tag>记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>网址记录</title>
    <link href="/p/78db8bbb/"/>
    <url>/p/78db8bbb/</url>
    
    <content type="html"><![CDATA[<h4 id="图片工具"><a href="#图片工具" class="headerlink" title="图片工具"></a>图片工具</h4><p><a href="https://www.jianshu.com/p/5b0cd08fadf1">不错的配图网址</a><br><a href="https://www.liulinblog.com/47979.html">好用的配图网址</a><br><a href="https://www.iloveimg.com/zh-cn">图片压缩网址</a></p>]]></content>
    
    
    <categories>
      
      <category>记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>随笔</tag>
      
      <tag>笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Centos安装配置Docker</title>
    <link href="/p/4ff9dde3/"/>
    <url>/p/4ff9dde3/</url>
    
    <content type="html"><![CDATA[<h3 id="卸载旧版本的Docker"><a href="#卸载旧版本的Docker" class="headerlink" title="卸载旧版本的Docker"></a>卸载旧版本的Docker</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs Bash">yum remove docker \<br>                  docker-client \<br>                  docker-client-latest \<br>                  docker-common \<br>                  docker-latest \<br>                  docker-latest-logrotate \<br>                  docker-logrotate \<br>                  docker-selinux \<br>                  docker-engine-selinux \<br>                  docker-engine<br></code></pre></td></tr></table></figure><h3 id="使用-yum-安装Docker"><a href="#使用-yum-安装Docker" class="headerlink" title="使用 yum 安装Docker"></a>使用 yum 安装Docker</h3><h4 id="执行以下命令安装依赖包："><a href="#执行以下命令安装依赖包：" class="headerlink" title="执行以下命令安装依赖包："></a>执行以下命令安装依赖包：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">yum install -y yum-utils<br></code></pre></td></tr></table></figure><h4 id="yum软件源"><a href="#yum软件源" class="headerlink" title="yum软件源"></a>yum软件源</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs Bash">yum-config-manager \<br>    --add-repo \<br>    https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo<br>   <br>sed -i <span class="hljs-string">&#x27;s/download.docker.com/mirrors.aliyun.com\/docker-ce/g&#x27;</span> /etc/yum.repos.d/docker-ce.repo<br><br></code></pre></td></tr></table></figure><h4 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">yum install docker-ce docker-ce-cli containerd.io<br></code></pre></td></tr></table></figure><h4 id="CentOS8-额外设置"><a href="#CentOS8-额外设置" class="headerlink" title="CentOS8 额外设置"></a>CentOS8 额外设置</h4><p>由于 CentOS8 防火墙使用了 <code>nftables</code>，但 Docker 尚未支持 <code>nftables</code>， 我们可以使用如下设置使用 <code>iptables</code>：</p><p>更改 <code>/etc/firewalld/firewalld.conf</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-comment"># FirewallBackend=nftables</span><br>FirewallBackend=iptables<br></code></pre></td></tr></table></figure><p>或者执行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Bash">firewall-cmd --permanent --zone=trusted --add-interface=docker0<br>firewall-cmd --reload<br><br></code></pre></td></tr></table></figure><h3 id="使用脚本自动安装"><a href="#使用脚本自动安装" class="headerlink" title="使用脚本自动安装"></a>使用脚本自动安装</h3><p>在测试或开发环境中 Docker 官方为了简化安装流程，提供了一套便捷的安装脚本，CentOS 系统上可以使用这套脚本安装，另外可以通过 <code>--mirror</code> 选项使用国内源进行安装：</p><p>若你想安装测试版的 Docker, 请从 <a href="http://test.docker.com/">test.docker.com</a> 获取脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Bash">curl -fsSL get.docker.com -o get-docker.sh<br>sh get-docker.sh --mirror Aliyun<br><br></code></pre></td></tr></table></figure><p>执行这个命令后，脚本就会自动的将一切准备工作做好，并且把 Docker 的稳定(stable)版本安装在系统中。</p>]]></content>
    
    
    <categories>
      
      <category>Docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Centos</tag>
      
      <tag>Docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Centos安装Python3.8</title>
    <link href="/p/f79433d6/"/>
    <url>/p/f79433d6/</url>
    
    <content type="html"><![CDATA[<blockquote><p>新买一台服务器通常是只安装了python2.7版本的，我想安装python3.8版本，详细安装教程如下</p></blockquote><h4 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h4><p>编译python源码的时候需要用到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gcc make libffi-devel<br></code></pre></td></tr></table></figure><h4 id="下载-Python-源码包"><a href="#下载-Python-源码包" class="headerlink" title="下载 Python 源码包"></a>下载 Python 源码包</h4><blockquote><p>如果没有安装 wget 请先去安装  yum install wget</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://www.python.org/ftp/python/3.8.1/Python-3.8.1.tgz<br></code></pre></td></tr></table></figure><h4 id="解压安装"><a href="#解压安装" class="headerlink" title="解压安装"></a>解压安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 解压压缩包</span><br>tar -zxvf Python-3.8.1.tgz  <br><br><span class="hljs-comment"># 配置安装位置</span><br>./configure prefix=/usr/local/python3<br><br><span class="hljs-comment"># 安装</span><br>make &amp;&amp; make install<br></code></pre></td></tr></table></figure><blockquote><p>如果没有报错表示安装成功</p></blockquote><h4 id="添加软链接"><a href="#添加软链接" class="headerlink" title="添加软链接"></a>添加软链接</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#添加python3的软链接 </span><br><span class="hljs-built_in">ln</span> -s /usr/local/python3/bin/python3.8 /usr/bin/python3 <br><br><span class="hljs-comment">#添加 pip3 的软链接 </span><br><span class="hljs-built_in">ln</span> -s /usr/local/python3/bin/pip3.8 /usr/bin/pip3<br></code></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><blockquote><p>出现下面页面表示安装成功</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@iZwz9gt6l3aw8d5732xn69Z ~]<span class="hljs-comment"># python3 -V</span><br>Python 3.8.1<br>[root@iZwz9gt6l3aw8d5732xn69Z ~]<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Centos</tag>
      
      <tag>安装</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Centos7 安装 JumpServer</title>
    <link href="/p/fb0b7d1a/"/>
    <url>/p/fb0b7d1a/</url>
    
    <content type="html"><![CDATA[<h3 id="官网地址"><a href="#官网地址" class="headerlink" title="官网地址"></a>官网地址</h3><h3 id="安装部署"><a href="#安装部署" class="headerlink" title="安装部署"></a>安装部署</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-comment"># 执行一键部署脚本</span><br>curl -sSL https://github.com/jumpserver/jumpserver/releases/download/v2.6.1/quick_start.sh | sh<br></code></pre></td></tr></table></figure><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-comment"># 说明</span><br><span class="hljs-comment">#### 这是项目总的配置文件, 会作为环境变量加载到各个容器中</span><br><span class="hljs-comment">#### 格式必须是 KEY=VALUE 不能有空格等</span><br><br><span class="hljs-comment"># Compose项目设置</span><br>COMPOSE_PROJECT_NAME=jms<br>COMPOSE_HTTP_TIMEOUT=3600<br>DOCKER_CLIENT_TIMEOUT=3600<br>DOCKER_SUBNET=192.168.250.0/24<br><br><span class="hljs-comment">## IPV6</span><br><span class="hljs-comment">#DOCKER_SUBNET_IPV6=2001:db8:10::/64</span><br><span class="hljs-comment">#USE_IPV6=0</span><br><br><span class="hljs-comment">### 持久化目录, 安装启动后不能再修改, 除非移动原来的持久化到新的位置</span><br>VOLUME_DIR=/opt/data/<br><br><span class="hljs-comment">## 是否使用外部MYSQL和REDIS</span><br>USE_EXTERNAL_MYSQL=1<br>USE_EXTERNAL_REDIS=1<br><br><span class="hljs-comment">## Nginx 配置，这个Nginx是用来分发路径到不同的服务</span><br>HTTP_PORT=8080<br>HTTPS_PORT=8443<br>SSH_PORT=2222<br><br><span class="hljs-comment">## LB 配置, 这个Nginx是HA时可以启动负载均衡到不同的主机</span><br>USE_LB=0<br>LB_HTTP_PORT=80<br>LB_HTTPS_PORT=443<br>LB_SSH_PORT=2223<br><br><span class="hljs-comment">## Task 配置</span><br>USE_TASK=1<br><br><span class="hljs-comment">## XPack</span><br>USE_XPACK=0<br><br><br><span class="hljs-comment"># Koko配置</span><br>CORE_HOST=http://121.5.21.20:8080<br>ENABLE_PROXY_PROTOCOL=<span class="hljs-literal">true</span><br><br><br><span class="hljs-comment"># Core 配置</span><br><span class="hljs-comment">### 启动后不能再修改，否则密码等等信息无法解密</span><br>SECRET_KEY=TEJZPgMoeXzo6ojeAuhNLE3s0r77eY1R9px129nqHVcSF9HF2<br>BOOTSTRAP_TOKEN=hank4RTz5QrYqfRW<br>LOG_LEVEL=INFO<br><span class="hljs-comment"># SESSION_COOKIE_AGE=86400</span><br><span class="hljs-comment"># SESSION_EXPIRE_AT_BROWSER_CLOSE=false</span><br><br><span class="hljs-comment">## MySQL数据库配置</span><br>DB_ENGINE=mysql<br>DB_HOST=172.17.0.7<br>DB_PORT=3306<br>DB_USER=root<br>DB_PASSWORD=7223c5a94dc4b691<br>DB_NAME=jumpserver<br><br><span class="hljs-comment">## Redis配置</span><br>REDIS_HOST=172.17.0.7<br>REDIS_PASSWORD=12345678<br><br><span class="hljs-comment">### Keycloak 配置方式</span><br><span class="hljs-comment">### AUTH_OPENID=true</span><br><span class="hljs-comment">### BASE_SITE_URL=https://jumpserver.company.com/</span><br><span class="hljs-comment">### AUTH_OPENID_SERVER_URL=https://keycloak.company.com/auth</span><br><span class="hljs-comment">### AUTH_OPENID_REALM_NAME=cmp</span><br><span class="hljs-comment">### AUTH_OPENID_CLIENT_ID=jumpserver</span><br><span class="hljs-comment">### AUTH_OPENID_CLIENT_SECRET=</span><br><span class="hljs-comment">### AUTH_OPENID_SHARE_SESSION=true</span><br><span class="hljs-comment">### AUTH_OPENID_IGNORE_SSL_VERIFICATION=true</span><br><br><br><span class="hljs-comment"># Guacamole 配置</span><br>JUMPSERVER_SERVER=http://121.5.21.20:8080<br>JUMPSERVER_KEY_DIR=/config/guacamole/data/key/<br>JUMPSERVER_RECORD_PATH=/config/guacamole/data/record/<br>JUMPSERVER_DRIVE_PATH=/config/guacamole/data/drive/<br>JUMPSERVER_ENABLE_DRIVE=<span class="hljs-literal">true</span><br>JUMPSERVER_CLEAR_DRIVE_SESSION=<span class="hljs-literal">true</span><br>JUMPSERVER_CLEAR_DRIVE_SCHEDULE=24<br><br><span class="hljs-comment"># Mysql 容器配置</span><br>MYSQL_ROOT_PASSWORD=7223c5a94dc4b691<br>MYSQL_DATABASE=jumpserver<br>REDIS_PORT=6379<br><br></code></pre></td></tr></table></figure><p>Mysql和 Redis 的ip要使用本机内网ip</p><h4 id="查看本机内网ip方法"><a href="#查看本机内网ip方法" class="headerlink" title="查看本机内网ip方法"></a>查看本机内网ip方法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">ifconfig<br></code></pre></td></tr></table></figure><p><img src="https://secure2.wostatic.cn/static/iMJj5ZrK3z9KcDgXbKqp32/7cdf2452d5d775b7939f175fcf5f5cd.png?auth_key=1666262665-fgKtPwDGHCMZKG6hUq9Gie-0-85e5b9d14da85363e617548a0ddf37bf"></p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
